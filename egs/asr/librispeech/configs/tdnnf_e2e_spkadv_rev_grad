[cmd]
cpu_cmd = ./utils/run.pl
cuda_cmd = ./utils/run.pl

[exp]
train_set = data/train_clean_100_sp_fbank_hires
tree_dir = exp/chain/e2e_biphone_tree
graph_dir = exp/chain/e2e_biphone_tree/graph_tgsmall
egs_dir = exp/chain/e2e_train_clean_100/fst_egs

# train params
num_epochs = 1
num_jobs_initial = 1
# No Parameter Averaging (Natural Gradient)
num_jobs_final = 1
# Maximize the combination of speakers in a training iter
multi_egs_loading = False
# add some random in the sampler such that the adv does not train the sampler generator
sampler = BucketBatchSuffleAllowSomePadding

lr_initial = 0.0005
lr_final = 0.00001
diagnostics_interval = 10
checkpoint_interval = 20
# Higher batch_size for x-vector training than ASR training
minibatch_size = 32
final_combination_n_model = 1
# train_stage = 15
# train_stage = last

model_file = local/chain/e2e/tuning/tdnnf_spkadv.py
dirname = e2e_tdnnf_rev_grad
model_args = ["--freeze-encoder", "False", "--adversarial-training", "True", "--spk2id", "./data/spk2id"]
init_weight_model = "./exp/spk/adv/best_model_custom.pt"

[test]
# test_set = data/test_clean_fbank_hires
# test_set = data/test_other_fbank_hires
# test_set = data/dev_other_fbank_hires
# test_set = data/dev_clean_fbank_hires
test_set = data/dev_clean_fbank_hires
suffix = _final
# decode on gpus
num_jobs = 3
gpu = True

# vim:set et sw=2 ts=2 ft=toml:
