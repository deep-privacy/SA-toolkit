[cmd]
cpu_cmd = ./utils/run.pl
cuda_cmd = ./utils/run.pl

[exp]
# 8 layer tdnnf model. NOTE: exp/chain${chain_affix} will be prepended automatically
e2e = True
train_set = data/train_clean_100_sp_fbank_hires
tree_dir = exp/chain/e2e_biphone_tree
# dummy folders. will not be touched
lang = data/lang_nosp_test_tgsmall
lang_chain = data/lang_chain
# trained using local/chain/e2e/prepare_data.sh and local/chain/e2e/get_egs.sh
graph_dir = exp/chain/e2e_biphone_tree/graph_tgsmall
egs_dir = exp/chain/e2e_tdnnf/fst_egs

# train params
num_epochs = 1
num_jobs_initial = 2
num_jobs_final = 5
lr_initial = 0.0005
lr_final = 0.00001
diagnostics_interval = 10
checkpoint_interval =  20
minibatch_size = 14
# grad_acc_steps = 10

 # finetune, last epcho usualy best model -> also to not break the vq prototypes
final_combination_n_model = 1
# train_stage = last
# train_stage = 66

# xent_regularize = 0.02
# xent_regularize = 0
# l2_regularize_factor = 0.3


model_file = local/chain/e2e/tuning/tdnnf_wav2vec_vq_lds.py
dirname = e2e_tdnnf_wav2vec_lds_vq_1024
model_args = ["--freeze-encoder", "True", "--codebook-size", "1024"]
init_weight_model = "./exp/chain/e2e_tdnnf_wav2vec/final.pt"

# sed -i -E "/^dirname|^model_args/s/[0-9]{2,}/256/" configs/tdnnf_e2e_wav2vec2_vq
# tail e2e_tdnnf_wav2vec_*/decode_test_clean*final_fg/scoringDetails/best_wer | grep -E "*e2e_tdnnf_wav2vec_vq_[0-9]{2,}" | grep "WER" | awk '{print $1 "\t"$2 "\t" $14}' | cut -d/ -f1,3 | sort -k5,5 -n -t"_"

[test]
# test_set = data/test_other_fbank_hires
# test_set = data/test_other_fbank_hires
# test_set = data/dev_other_fbank_hires
# test_set = data/dev_clean_fbank_hires
test_set = data/test_other_fbank_hires
# suffix = baseline
# decode on gpus
num_jobs = 3
gpu = True
# iter = 560


# vim:set et sw=2 ts=2 ft=toml:
